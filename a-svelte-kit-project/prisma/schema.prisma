// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  phoneNumber  String?
  email        String        @unique
  createdAt    DateTime      @default(now())
  password     String
  credits      Int           @default(0)
  transactions Transaction[]
  sessions      Session[]
}

model Session {
  id        Int      @id @default(autoincrement())
  sessionId String   @unique
  userId    Int
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

enum BallQuality {
  A
  B
  C
}

model BallPrice {
  id          Int         @id @default(autoincrement())
  ballQuality BallQuality
  price       Int
  createdAt   DateTime    @default(now())
}

model Location {
  id        Int       @id @default(autoincrement())
  name      String
  longitude Float
  latitude  Float
  machines  Machine[]
}

model Machine {
  id                 Int                  @id @default(autoincrement())
  location           Location             @relation(fields: [locationId], references: [id])
  locationId         Int
  preciseLongitude   Float
  preciseLatitude    Float
  availability       Boolean              @default(true)
  ballCountByQuality BallCountByQuality[]
  transactions       Transaction[]
}

model BallCountByQuality {
  id            Int          @id @default(autoincrement())
  machine       Machine?     @relation(fields: [machineId], references: [id])
  machineId     Int?
  ballQuality   BallQuality
  count         Int          @default(0)
  Transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId Int?
}

enum TransactionType {
  ACQUIRE
  RECYCLE
}

model Transaction {
  id                 Int                  @id @default(autoincrement())
  ballCountByQuality BallCountByQuality[]
  createdAt          DateTime             @default(now())
  user               User                 @relation(fields: [userId], references: [id])
  userId             Int
  machine            Machine              @relation(fields: [machineId], references: [id])
  machineId          Int
  type               TransactionType
}

// model Payment {
//   id     Int    @id @default(autoincrement())
//   amount Int
//   method String
// }
